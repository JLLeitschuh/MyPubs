<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>gov.usgs.cida</groupId>
	<artifactId>mypubsui</artifactId>
	<name>MyPubs UI</name>
	<version>0.1-SNAPSHOT</version>
	<packaging>war</packaging>

    <organization>
    	<name>Center for Integrated Data Analytics</name>
    	<url>http://cida.usgs.gov</url>
    </organization>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>
		<build.scm.version>${buildNumber}</build.scm.version>
		<cida.maven.url>http://internal.cida.usgs.gov/maven</cida.maven.url>
    	<timestamp>${maven.build.timestamp}</timestamp>
    	<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<slf4j.version>1.7.5</slf4j.version>
        <webjars.base>target/webjars</webjars.base>
        <webjars.libs>${webjars.base}/META-INF/resources/webjars</webjars.libs>
	</properties>

	<issueManagement>
		<system>JIRA</system>
		<url>https://my.usgs.gov/jira/browse/PUBSTWO</url>
	</issueManagement>

  <developers>
    <developer>
      <id>duselman</id>
      <name>David Uselmann</name>
      <email>duselmann@usgs.gov</email>
      <organization>Center for Integrated Data Analytics</organization>
      <organizationUrl>http://cida.usgs.gov</organizationUrl>
      <roles>
        <role>Software Developer</role>
      </roles>
      <timezone>-6</timezone>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>Public Domain</name>
      <url>http://en.wikipedia.org/wiki/Public_domain_software</url>
      <comments>All work of the US Government enter into the Public Domain within
                the United States.  Whether that work is public domain outside of
                the United States depends on various factors.
      </comments>
    </license>
  </licenses>

	<repositories>
		<repository>
			<id>cida-public</id>
			<name>CIDA Public Nexus</name>
			<url>http://cida.usgs.gov/maven/cida-public/</url>
		</repository>
		<repository>
			<id>cida-nexus</id>
			<name>CIDA Nexus</name>
			<url>${cida.maven.url}/content/groups/public/</url>
		</repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>cida-plugin-nexus</id>
			<name>CIDA Plugin repo</name>
			<url>${cida.maven.url}/content/groups/public/</url>
		</pluginRepository>
	</pluginRepositories>

    <scm>
		<url>https://github.com/USGS-CIDA/gPublications-Warehouse</url>
		<connection>scm:git:git@github.com:USGS-CIDA/gPublications-Warehouse.git</connection>
		<developerConnection>scm:git:git@github.com:USGS-CIDA/gPublications-Warehouse.git</developerConnection>
    </scm>

	<distributionManagement>
		<repository>
			<id>cida-releases</id>
			<name>CIDA Releases</name>
			<url>${cida.maven.url}/content/repositories/cida-releases</url>
		</repository>
		<snapshotRepository>
			<id>cida-snapshots</id>
			<name>CIDA Snapshots</name>
			<url>${cida.maven.url}/content/repositories/cida-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.9</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<artifactId>slf4j-api</artifactId>
			<groupId>org.slf4j</groupId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>gov.usgs.cida</groupId>
			<artifactId>dynamicProperties</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>ng-grid</artifactId>
			<version>2.0.11-2</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>mypubsui</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
					  <id>generate-version-file</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<mkdir dir="target/${project.artifactId}"/>
								<propertyfile file="${basedir}/target/${project.artifactId}/version.properties" comment="Version information">
									<entry key="version" value="${project.version}" />
								</propertyfile>
								<echo file="${basedir}/target/${project.artifactId}/version.json">{ "buildTime": "${timestamp}", "version": "${project.version}"}</echo>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack webjars</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>org.webjars</includeGroupIds>
                            <outputDirectory>${webjars.base}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

		    <plugin>
		        <groupId>com.github.klieber</groupId>
		        <artifactId>phantomjs-maven-plugin</artifactId>
		        <version>0.4</version>
		        <executions>
		          <execution>
		            <goals>
		              <goal>install</goal>
		            </goals>
		          </execution>
		        </executions>
		        <configuration>
		          <version>1.9.7</version>
		        </configuration>
		    </plugin>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>1.3.1.5</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
			        <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
				<webDriverCapabilities>
	                               <capability>
	                                  <name>phantomjs.binary.path</name>
	                                  <value>${phantomjs.binary}</value>
	                               </capability>
	                        </webDriverCapabilities>			        
				<preloadSources>
						<source>src/main/webapp/lib/jquery/jquery.1.11.0.js</source>
						<source>src/main/webapp/lib/jquery-ui-1.11.0.custom/jquery-ui.js</source>
						<source>src/main/webapp/lib/underscore/underscore.1.6.0.js</source>
						<source>src/main/webapp/lib/select2/select2.3.4.8.js</source>
						<source>src/main/webapp/lib/tinymce/tinymce.4.1.0.min.js</source>

						<source>src/main/webapp/lib/angular/angular.1.2.17.js</source>
                        <source>${webjars.libs}/ng-grid/2.0.11/ng-grid.min.js</source>
						<source>src/main/webapp/lib/angular/angular-route.1.2.17.js</source>
						<source>src/main/webapp/lib/angular/angular-animate.1.2.17.js</source>
						<source>src/main/webapp/lib/angular/angular-cookies.1.2.17.js</source>
						<source>src/main/webapp/lib/angular/ui-select2.js</source>
						<source>src/main/webapp/lib/angular/ui-bootstrap-tpls-0.11.0.js</source>
						<source>src/main/webapp/lib/angular/ui-tinymce.0.5.x.js</source>
						<source>src/main/webapp/lib/ui-sortable-master/src/sortable.js</source>
                                                <source>src/main/webapp/lib/angular-bootstrap-datetimepicker/js/datetimepicker.js</source>
                                                <source>src/main/webapp/lib/moment/moment.js</source>
            
						<!-- testing libs -->
						<source>src/test/js/lib/angular-mocks.1.2.17.js</source>
			            <source>src/test/js/lib/sinon-1.10.1.js</source>
			            <source>src/test/js/lib/jasmine-fixture.js</source>
			            <source>src/test/js/lib/jquery.simulate.js</source>
	          		</preloadSources>
				    <keepServerAlive>true</keepServerAlive> <!-- Needed to allow the saga-maven-plugin to run the tests -->
				    <jsSrcDir>src/main/webapp/mypubs</jsSrcDir>
				    <jsTestSrcDir>src/test/js/specs</jsTestSrcDir>

				</configuration>
			</plugin>
			<plugin>
			    <groupId>com.github.timurstrekalov</groupId>
			    <artifactId>saga-maven-plugin</artifactId>
			    <version>1.5.3</version>
			    <executions>
				<execution>
				    <phase>verify</phase>
				    <goals>
					<goal>coverage</goal>
				    </goals>
				</execution>
			    </executions>
			    <configuration>
				<baseDir>http://localhost:${jasmine.serverPort}</baseDir>
				<outputDir>${project.build.directory}/coverage</outputDir>
				<noInstrumentPatterns>
				    <pattern>.+/.+spec\.js</pattern>
				    <pattern>.+/lib/.+\.js</pattern>
				    <!-- Add patterns for files that don't need to be analyzed such as library files -->
				</noInstrumentPatterns>
			    </configuration>
			</plugin>
			<plugin>
			    <groupId>com.google.code.maven-replacer-plugin</groupId>
			    <artifactId>replacer</artifactId>
			    <version>1.5.3</version>
			    <executions>
				<execution>
				    <phase>verify</phase>
				    <goals>
  					<goal>replace</goal>
				    </goals>
				</execution>
			    </executions>
			    <configuration>
				<file>${project.build.directory}/coverage/total-coverage.dat</file>
				<outputFile>${project.build.directory}/jasmine/total-coverage.dat</outputFile>
				<regex>false</regex>
				<token>src/</token>
				<value>${project.basedir}/src/main/webapp/mypubs/</value>
			    </configuration>
			</plugin>
		 </plugins>
	</build>
</project>
